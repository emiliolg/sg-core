rootProject.name = 'suigeneris'

if ("true" != System.getProperty("suigen.production") && file('../common').exists()) includeBuild('../common') {
  dependencySubstitution {
        substitute module('com.tekgenesis:common-common-all') with project(':common-all')
        substitute module('com.tekgenesis:common-common-test') with project(':common-test')
    }
}
include "codegen:base",
        "codegen:metamodel",
        "metadata:type",
        "metadata:role",
        "metadata:expr",
        "metadata:entity",
        "metadata:form",
        "metadata:handler",
        "metadata:workflow",
        "metadata:builder",
        "metadata:authorization",
        "metadata:util",
        "parser:common",
        "parser:metamodel",
        "report:base",
        "db:base",
        "db:transaction",
        "db:entity",
        "db:etl",
        "db:cache",
		"db:es",
		"db:index",
		"db:introspect",
        "runtime:task",
        "runtime:cluster",
        "runtime:persistence",
        "runtime:web",
        "runtime:test",
        "runtime:mail",
        "runtime:notification",
        "runtime:metrics",
        "ix:charset",
        "ix:db",
        "ix:parser",
        "process:core",
        "projects:console",
        "projects:authorization",
        "projects:social",
        "projects:admin",
        "projects:inbox",
        "server:web",
        "server:core",
        "server:cluster",
        "server:aws",
        "server:webproxy",
        "samples:basic",
        "samples:showcase",
        "plugin:common",
        "plugin:jps",
        "plugin:mm",
        "plugin:gradle",
        "selenium:common",
        "server:app",
        "form:serializer",
        "form:view",
        "form:selenium",
        "doc",
		"doc:samples:snippets",
		"doc:samples:school",
		"doc:samples:doc-project",
        "doc:samples:invites",
		"eventbus:core",
		"eventbus:kafka",
		"eventbus:aws"
