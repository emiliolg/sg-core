
// ...............................................................................................................................
//
// (C) Copyright  2011/2017 TekGenesis.  All Rights Reserved
// THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF TekGenesis.
// The copyright notice above does not evidence any actual or intended
// publication of such source code.
//
// ...............................................................................................................................

package tekgenesis.lang.mm.translate.ui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.border.TitledBorder;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.memetix.mst.language.SpokenDialect;

import tekgenesis.lang.mm.translate.speak.SpeakManager;

/**
 * Diegor's Wisdom.
 */

@SuppressWarnings("ALL")
public class DiegoHelp extends JFrame {

    //~ Instance Fields ..............................................................................................................................

    private JButton           genIdeaButton;
    private JButton           invalidateCachesButton;
    private JPanel            mainPanel;
    private JButton           pullButton;
    private JComboBox<String> selectLanguage;
    private JButton           updatePluginButton;

    //~ Instance initializers ........................................................................................................................

    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    //~ Constructors .................................................................................................................................

    /** Diegor's Wisdom. */
    public DiegoHelp(String title)
        throws HeadlessException
    {
        super(title);
        selectLanguage.setModel(new DefaultComboBoxModel<String>(SpeakManager.getAll()));
        genIdeaButton.addActionListener(new SpeakListener(genIdeaButton.getText()));
        invalidateCachesButton.addActionListener(new SpeakListener(invalidateCachesButton.getText()));
        pullButton.addActionListener(new SpeakListener(pullButton.getText()));
        updatePluginButton.addActionListener(new SpeakListener(updatePluginButton.getText()));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        add(mainPanel);
        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    //~ Methods ......................................................................................................................................

    /** @noinspection  ALL */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer >>> IMPORTANT!! <<< DO NOT edit this method OR
     * call it in your code!
     *
     * @noinspection  ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel1, BorderLayout.NORTH);
        panel1.setBorder(
            BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(),
                "Select Language",
                TitledBorder.DEFAULT_JUSTIFICATION,
                TitledBorder.DEFAULT_POSITION,
                null,
                UIManager.getColor("Button.foreground")));
        selectLanguage = new JComboBox<String>();
        final DefaultComboBoxModel<String> defaultComboBoxModel1 = new DefaultComboBoxModel<String>();
        selectLanguage.setModel(defaultComboBoxModel1);
        panel1.add(selectLanguage, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel2, BorderLayout.WEST);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.add(panel3, BorderLayout.CENTER);
        panel3.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), null));
        pullButton = new JButton();
        pullButton.setText("Did You Pull?");
        panel3.add(pullButton,
            new GridConstraints(0,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false));
        updatePluginButton = new JButton();
        updatePluginButton.setText("Did You Update Plug-in?");
        panel3.add(updatePluginButton,
            new GridConstraints(1,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false));
        invalidateCachesButton = new JButton();
        invalidateCachesButton.setText("Did You Invalidate Caches?");
        panel3.add(invalidateCachesButton,
            new GridConstraints(3,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false));
        genIdeaButton = new JButton();
        genIdeaButton.setText("Did You Do Gen-idea?");
        panel3.add(genIdeaButton,
            new GridConstraints(2,
                0,
                1,
                1,
                GridConstraints.ANCHOR_CENTER,
                GridConstraints.FILL_HORIZONTAL,
                GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,
                GridConstraints.SIZEPOLICY_FIXED,
                null,
                null,
                null,
                0,
                false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new BorderLayout(0, 0));
        mainPanel.add(panel4, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setIcon(new ImageIcon(getClass().getResource("/tekgenesis/lang/mm/Diegor.png")));
        label1.setMaximumSize(new Dimension(199, 1066));
        label1.setMinimumSize(new Dimension(300, 1066));
        label1.setText("");
        panel4.add(label1, BorderLayout.CENTER);
    }  // end method $$$setupUI$$$

    private void createUIComponents() {}

    //~ Static Fields ................................................................................................................................

    private static final long serialVersionUID = -7024768160511246470L;

    //~ Inner Classes ................................................................................................................................

    private class SpeakListener implements ActionListener {
        private final String speakText;

        public SpeakListener(String text) {
            speakText = text;
        }

        @Override public void actionPerformed(ActionEvent e) {
            SpeakManager.translateAndSpeak(speakText, SpokenDialect.valueOf((String) selectLanguage.getSelectedItem()));
        }
    }
}  // end class DiegoHelp
