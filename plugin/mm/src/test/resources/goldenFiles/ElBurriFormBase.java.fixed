package monumental;

import tekgenesis.form.Action;
import tekgenesis.form.FormImplementation;
import tekgenesis.form.FormInstance;
import tekgenesis.form.Message;
import org.jetbrains.annotations.NotNull;

/** 
 * Generated base class for form: ElBurriForm.
 * Don't modify this as this is an auto generated class that's gets generated
 * every time the meta model file is modified. Use subclass instead.
 */
@SuppressWarnings({"DuplicateStringLiteralInspection", "WeakerAccess", "ClassWithTooManyMethods", "LocalVariableHidesMemberVariable"})
public abstract class ElBurriFormBase
    extends FormInstance<ElBurri>
{
    //~ Fields ...................................................................................................................

    @SuppressWarnings({"InstanceVariableMayNotBeInitialized","UnusedDeclaration"}) @NotNull private FormImplementation f;

    //~ Methods ..................................................................................................................

    /** Invoked when creating a form instance */
    @NotNull public abstract Action create();

    /** Invoked when updating a form instance */
    @NotNull public Action update() {
        final ElBurri elBurri = find();
        copyTo(elBurri);
        elBurri.update();
        return actions.getDefault();
    }

    /** Invoked when deleting a form instance */
    @NotNull public Action delete() {
        find().delete();
        return actions.getDefault();
    }

    /** Invoked when canceling a form instance */
    @NotNull public Action cancel() { return actions.getDefault(); }

    @NotNull public String keyAsString() { return ""; }

    public void setPrimaryKey(@NotNull String key) { }

    /** Invoked to find an entity instance */
    @NotNull public abstract ElBurri find();

    /** Invoked when populating a form instance */
    @NotNull public ElBurri populate() { return find(); }

    /** Associates a new message to the specified field and returns it for any further configuration. */
    @NotNull public Message message(@NotNull Fields field, @NotNull String msg) { return f.msg(field, msg); }

    /** Returns true if the field value is not null. */
    public boolean isDefined(@NotNull Fields field) { return f.defined(field); }

    /** Copies form values to given elBurri instance */
    @SuppressWarnings("UnusedParameters") public void copyTo(@NotNull ElBurri elBurri) { }

    @NotNull public String getDefensor() { return f.get(Fields.DEFENSOR, String.class); }

    public void setDefensor(@NotNull String defensor) { f.set(Fields.DEFENSOR, defensor); }

    //~ Inner Classes ............................................................................................................

    @SuppressWarnings("UnnecessarySemicolon")
    public enum Fields
    {
        DEFENSOR;
    }
}
