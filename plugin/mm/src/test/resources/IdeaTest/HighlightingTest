package sales;

entity Product "Product"
    primary_key productId
    described_by model, description
    searchable
{
	productId "Id"              : String(8);
	model "Model No."           : String(20);
	description "Description"   : String(100), optional;
	price "Price"               : Decimal(10,2);
	state "State"               : State;
	category "Category"         : Category;
}

form ProductForm "Product Form"
    entity Product
{
    productId;
	model;
	description, default model;
	price;
	state;
	//horizontal { category; "+" : button, on_click createCategory; };

	horizontal, style "form-actions" {
        button(save);
        button(cancel);
        button(delete), style "pull-right";
    };
}
entity Product2 "P2"
    primary_key number
    described_by statement
{
	number  "Number"                : Decimal(12);
	statement   "Statement"         : String(50);
	instructions  "Instructions"    : String(100), optional;
	order  "Order Number"           : Int;
	/*date    "Date"                  : Date;*/
	type    "Type"			        : ProductType;
    mono   "mono"                 : Mono*;
}

form ProductForm2 "PForm"
    entity Product2
{
	number "#" : number;
    statement;
    instructions, required;
	"Order" : horizontal {
	    "#" : order;
	    //"Random" : button, on_click randomOrder;
	    };
    /*date;*/
    holliday "Holliday" : check_box;
	type;
	"Shortname" : horizontal {
	   // shortname : text_field, on_change checkShortname;
	    available : text_field;
	    };
	other "Other" : String(20), internal;
	mono {
	    slot;
	    product, combo_box;
        qty;
        unit_price, disable;
        discount;
	};
	"Total" : Decimal(10,2)/*, is sum(price)*/, disable;
}
entity Mono "Item"
	primary_key slot
	described_by product,qty
{
    slot "Slot"             : Int;
    product "Product"       : Product;
    qty "Quantity"          : Int, default 1;
    prod2 "p2"       : Product2;
    unit_price "Unit Price" : Decimal(10,2);
    discount "Discount"     : Decimal(10,2);
}


entity Category "Category"
    primary_key idKey
    described_by descr
    searchable
{
    idKey "Id #"           : Int, check idKey > 0 : "Must be positive";
    name "Name"         : String (30);
    descr "Description" : String (120);
    products "Products" : Product*;
}

enum State
{
    ACTIVE          : "Active";
    DISCONTINUED    : "Discontinued";
}
enum ProductType "Product Type"
{
    STANDARD    : "Standard";
    AUTO_BILL  	: "Auto-Bill";
    PRO_FORMA  	: "Pro-Forma";
    QUICK  	    : "Quick";
}
